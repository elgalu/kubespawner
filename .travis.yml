os: linux
dist: bionic
language: python
python:
  - 3.8

stages:
  - name: test
    if: tag IS NOT present
  - name: publish
    if: tag IS present

before_install:
  # Exit immediately if a command exits with a non-zero status.
  - set -e
  # Minikube sais conntrack is required by k8s 1.18 and 1.19
  - |
      if [ "${KUBE_VERSION:2:2}" -ge "18" ]; then
        sudo apt-get -q -y install conntrack;
      fi

# install dependencies
install:
  # Only add the --pre flag if $PRE_RELEASES is specified to test pre-releases
  # of dependencies, and only pin kubernetes if $KUBE_PY is specified.
  - pip install --upgrade setuptools pip
  - pip install -e ".[test]" ${PRE_RELEASES:+--pre} ${KUBE_PY:+kubernetes==${KUBE_PY}}

  # Allow for testing against the jupyterhub master branch as well
  - |
      if [ "$JUPYTERHUB_MASTER" == "TRUE" ]; then
        pip install https://github.com/jupyterhub/jupyterhub/archive/master.zip
      fi
  
  # Log installed python packages' versions
  - pip freeze

# run tests
script:
  - set -e
  # flake8 runs a very quick code analysis
  # without running any of the code it analyses
  - flake8 kubespawner
  # install kubectl, minikube and start minikube
  - source ci/minikube.env
  - ./ci/install-kube.sh
  - pytest --cov kubespawner -v

# followup
after_success:
  - pip install codecov
  - codecov

jobs:
  # NOTE: We may end up updating these set versions with time, when doing that,
  # these links are relevant.
  #
  # ref: KUBE_VERSION's valid values
  #      https://github.com/kubernetes/kubernetes/tags
  # ref: KUBE_PY's valid values
  #      https://github.com/kubernetes-client/python#compatibility
  include:
    # Test the oldest supported python on
    # the latest supported kubernetes-client,
    # and use the latest supported kubernetes
    # version along for the kubernetes-client.
    #
    # KUBE_PY represent the version of kubernetes-client/python, and client
    # version 10 supports k8s API version 1.14, and version 1 supports k8s API
    # version 1.15 and so on.
    #
    # client 10 -> k8s 1.14.10
    # client 11 -> k8s 1.15.12
    # client 12 -> k8s 1.16.15
    # client 13 -> k8s 1.17.13 (client 13 isn't released)
    #
    # For the latest k8s versions, see:
    # https://github.com/kubernetes/sig-release/blob/master/releases/patch-releases.md

    - name: client:10,k8s:1.14,py:38
      env: KUBE_PY=10 KUBE_VERSION=1.14.10

    - name: client:11,k8s:1.15,py:37
      env: KUBE_PY=11 KUBE_VERSION=1.15.12
      python: 3.7

    - name: client:12,k8s:1.16,py:36
      env: &latest_supported KUBE_PY=12 KUBE_VERSION=1.16.15
      python: 3.6

    - name: client:12,k8s:1.16,jupyterhub:master
      env: KUBE_PY=12 KUBE_VERSION=1.16.15 JUPYTERHUB_MASTER=TRUE

    - name: client:12,k8s:1.19
      env: KUBE_PY=12 KUBE_VERSION=1.19.2

    # Allowed failure tests:
    # ----------------------

    # 1. Test with pre-releases of kubernetes-client/python and other
    #    python dependencies
    - &allowed_failure_1
      name: client:pre-release,k8s:1.17 - allowed failure
      env: PRE_RELEASES=TRUE KUBE_VERSION=1.17.12

    # 2. Test with a nightly python build using latest known
    #    supported configuration.
    - &allowed_failure_2
      name: client:12,k8s:1.16,python:nightly - allowed failure
      python: nightly
      env: *latest_supported

    # Only deploy if all test jobs passed
    - stage: publish
      script:
        - echo "Required dummy override of default 'script' in .travis.yml."
      after_success:
        - echo "Required dummy override of default 'after_success' in .travis.yml."
      deploy:
        provider: pypi
        user: __token__
        # password: set by TravisCI's environment variable PYPI_PASSWORD
        # ref: https://travis-ci.org/jupyterhub/kubespawner/settings
        distributions: sdist bdist_wheel
        on:
          # Without this we get the note about:
          # Skipping a deployment with the pypi provider because this branch is not permitted: <tag>
          tags: true

  allow_failures:
    - *allowed_failure_1
    - *allowed_failure_2
  fast_finish: true
